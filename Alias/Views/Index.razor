@page "/"
@page "/{sessionId}"

@inherits ActivatableViewBase<IndexViewModel>

@if (!ViewModel.IsInitialized) {
  <div class="row align-items-center h-100">
    <div class="col">
      <p class="text-center text-uppercase">Загрузка...</p>
    </div>
  </div>

} else if (!ViewModel.IsLoggedIn) {
  <div class="row align-items-center h-100">
    <div class="col">
      <EditForm class="form-inline justify-content-center" Model="ViewModel" OnValidSubmit="ViewModel.Login">
        <div class="form-group mr-2">
          <InputText class="form-control" placeholder="Введите имя" @bind-Value="ViewModel.Username" />
        </div>
        <div class="form-group mr-2">
          <input type="submit" class="btn btn-primary" value="Войти" />
        </div>
      </EditForm>
      <p class="text-center">Вы не авторизованы. Введите имя в поле выше и нажмите "Войти"</p>
    </div>
  </div>

} else if (ViewModel.Player.Session.CurrentRound == null) {

  <header>
    <EditForm class="form-inline row ml-1" Model="ViewModel" OnValidSubmit="ViewModel.Logout">
      <div class="form-group row ml-1">
        <b>Привет, @ViewModel.Username!</b>
      </div>
      <div class="form-group ml-auto row mr-3">
        <div class="row mt-1 mr-3">
          <a class="github-button" href="https://github.com/Mikant/Alias" data-size="large" data-show-count="true" aria-label="Star Mikant/Alias on GitHub" target="_blank">Star</a>
        </div>
        <input type="submit" class="btn btn-light" value="Выйти" />
      </div>
    </EditForm>
  </header>

  <hr />

  <div class="container">
    <div class="row">
      <div class="col-sm">
        <b>Слова</b>
        <hr />
        <form>
          @{
            var wordCount = ViewModel.Player.Session.MaximumWordCount;
            var addWords = wordCount - ViewModel.Words.Count;
            using (ViewModel.Words.SuspendNotifications()) {
              for (int i = 0; i < addWords; i++)
                ViewModel.Words.Add(string.Empty);
            }

            for (int i = 0; i < wordCount; i++) {
              var ii = i;

              <div class="form-group">
                @*<label for="@("wordInput" + ii)">Слово #@(ii + 1)</label>*@
                <input type="text" class="form-control" id="@("wordInput" + ii)" placeholder="Введите слово" @bind="ViewModel.Words[ii]">
              </div>

            }

            if (ViewModel.Player.IsGameMaster) {
              <div class="form-group">
                <label for="maxWordCountSelect">Количество слов:</label>
                <select id="maxWordCountSelect" @bind="ViewModel.MaximumWordCountText">
                  @foreach (var template in Enumerable.Range(3, 10)) {
                    <option value=@template>@template</option>
                  }
                </select>
              </div>
            }
          }

        </form>
      </div>
      <div class="col-sm-auto">
        <b>Команда</b>
        <hr />
        <form>
          @{
            var maxTeams = ViewModel.Player?.Session.MaximumTeamCount ?? 0;
            for (int i = 0; i < maxTeams; i++) {
              var ii = i;

              var act = (ViewModel.Player?.Team ?? -1) == i;

              <div class="form-group">
                <input value="🏳️" type="button" class="btn btn-@GetBootstrapStyleForTeam(i) btn-block @(act ? "active" : string.Empty)" data-toggle="button" aria-pressed="@(act.ToString().ToLower())" autocomplete="off" @onclick="@(e => ViewModel.SetTeam(ii))" />
              </div>
            }

            // no auto-highlight
            <div class="form-group">
              <input value="наблюдатель" type="button" class="btn btn-@GetBootstrapStyleForTeam(-1) btn-block" data-toggle="button" aria-pressed="false" autocomplete="off" @onclick="@(e => ViewModel.SetTeam(-1))" />
            </div>
          }
        </form>
      </div>
      <div class="col-sm">
        <b>Участники</b>
        <hr />
        <form>
          @foreach (var player in ViewModel.Player.Session.Players) {
            <div class="form-group">
              <input type="button"
                     class="btn btn-@GetBootstrapStyleForTeam(player.Team) btn-block"
                     value="@(player.Name)"
                     style="color: @(player.Name == ViewModel.Username ? "orangered" : "black"); font-weight: @(player.IsGameMaster ? "bold" : "normal");"
                     @onclick="@(e => ViewModel.DelegateAdminRights(player))"
                     @ondblclick="@(e => ViewModel.Kick(player))" />
            </div>
          }
        </form>
      </div>
    </div>
  </div>

  <hr />

  <p class="text-center">Игроки должны разбиться на команды с равным количеством участников. Игра начнётся по команде ведущего игрока</p>

  @if (ViewModel.Player.IsGameMaster) {

    <hr />

    <p class="text-center">Вы - ведущий игрок. Начните игру, когда остальные участники будут готовы. Для назначения другого игрока ведущим, нажмите на его имя.</p>

    <hr />

    <div class="container">
      <div class="row">
        <div class="col-sm" />
        <div class="col-sm">
          <input value="Начать игру" type="button" class="btn btn-success btn-block mx-auto m-3" @onclick="@(e => ViewModel.Player.Session.Run(default))" />
        </div>
        <div class="col-sm" />
      </div>
    </div>

  }

} else if (ViewModel.Player.Session.CurrentRound.CurrentRun == null) {

  <div class="row align-items-center h-100">
    <div class="container">

      @if (ViewModel.Player.Session.CurrentRound.Index > 0) {
        <h1>Раунд @(ViewModel.Player.Session.CurrentRound.Index)</h1>

        <hr />

        <div class="row justify-content-center">
          <div class="table-responsive">
            <table class="table">
              <thead>
                <tr>
                  <th scope="col">#</th>
                  <th scope="col">Отгадано</th>
                  <th scope="col">Пропущено</th>
                </tr>
              </thead>
              <tbody>
                @{
                  var teams = ViewModel.Player.Session.Teams
                    .Where(x => x.Id >= 0) // -spectators
                    .OrderByDescending(x => x.Score.HitCount)
                    .ToList();

                  for (int i = 0; i < teams.Count; i++) {
                    var ii = i;

                    <tr class="bg-@GetBootstrapStyleForTeam(teams[ii].Id)">
                      <th scope="row">@(ii + 1)</th>
                      <td>@(teams[ii].Score.HitCount)</td>
                      <td>@(teams[ii].Score.MissCount)</td>
                    </tr>
                  }
                }
              </tbody>
            </table>
          </div>
        </div>

        <hr />
      }

      <div class="row align-items-center">
        <div class="col-sm">
          @if (ViewModel.Player.IsGameMaster) {
            <input value="Завершить игру" type="button" class="btn btn-warning btn-block" @onclick="@(e => ViewModel.Player.YesNoSignal.OnNext(false))" />
          }
        </div>

        <div class="col-sm">
          <p class="text-center text-uppercase" style="margin: 0; padding: .375rem .75rem;">Ожидание@(ViewModel.Player.IsGameMaster ? string.Empty : " ведущего игрока")</p>
        </div>

        <div class="col-sm">
          @if (ViewModel.Player.IsGameMaster) {
            <input value="Новый раунд" type="button" class="btn btn-success btn-block" @onclick="@(e => ViewModel.Player.YesNoSignal.OnNext(true))" />
          }
        </div>
      </div>
    </div>
  </div>

} else {

  <div class="row align-items-center h-100">
    <div class="container">
      <div class="row justify-content-center text-center">
        <div class="col mx-auto">
          @{
            var currentRun = ViewModel.Player.Session.CurrentRound.CurrentRun;
            var currentPlayer = currentRun.Player;
            var iamCurrent = currentPlayer == ViewModel.Player;

            if (iamCurrent) {
              if (!currentRun.IsRunning) {
                <h2 class="text-center text-uppercase">Ваш ход</h2>
                <hr />
              }
            } else {
              <p class="text-uppercase">Ходит</p>
              <input type="button"
                     class="btn btn-@GetBootstrapStyleForTeam(ViewModel.Player.Session.CurrentRound.CurrentRun.Player.Team) btn-block"
                     value="@(currentPlayer.Name)" />

              if (!iamCurrent && ViewModel.Player.Team == currentPlayer.Team && !currentRun.IsRunning) {
                <h2 class="text-uppercase">А Вы отгададываете</h2>
              }

              <hr />
            }
          }

          <h1 class="text-center">@(ViewModel.Player.Session.CurrentRound.CurrentRun.TimeRemaining.ToString("mm\\:ss"))</h1>
        </div>
      </div>

      @{
        var iamSpectator = Models.Team.IsSpectator(ViewModel.Player);

        if (iamCurrent || iamSpectator) {

          <hr />

          <div class="row justify-content-center">
            <div class="col">
              <h1 class="text-center text-uppercase">@(currentRun.Word)</h1>
            </div>
          </div>
        }

        if (iamCurrent) {
          <div class="row">
            <div class="col-sm">
              @if (currentRun.IsRunning) {
                <input value="Пропуск" type="button" class="btn btn-danger btn-block text-uppercase m-2" @onclick="@(e => ViewModel.Player.YesNoSignal.OnNext(false))" disabled="@(currentRun.RemainingWordCount <= 1)" />
              }
            </div>

            <div class="col-sm">
              @if (!currentRun.IsRunning) {
                <input value="Начать" type="button" class="btn btn-warning btn-block text-uppercase m-2" @onclick="@(e => ViewModel.Player.YesNoSignal.OnNext(false))" />
              }
            </div>

            <div class="col-sm">
              @if (currentRun.IsRunning) {
                <input value="Следующее" type="button" class="btn btn-success btn-block text-uppercase m-2" @onclick="@(e => ViewModel.Player.YesNoSignal.OnNext(true))" />
              }
            </div>
          </div>
        } else {
          <div class="row">
            <div class="col-sm">
              <p class="text-center text-uppercase">Пропусков</p>
            </div>

            <div class="col-sm">
            </div>

            <div class="col-sm">
              <p class="text-center text-uppercase">Отгадано</p>
            </div>
          </div>
        }
      }

      <hr />

      <div class="row">
        <div class="col-sm">
          <h2 class="text-center">@(ViewModel.Player.Session.CurrentRound.CurrentRun.Score.MissCount)</h2>
        </div>

        <div class="col-sm" />

        <div class="col-sm">
          <h2 class="text-center">@(ViewModel.Player.Session.CurrentRound.CurrentRun.Score.HitCount)</h2>
        </div>
      </div>

    </div>
  </div>

}
